#ifndef _DOT_
#define _DOT_
#include "dot.h"


/////////////////////////////////////////////////////////////////////////////////

dot::dot() : t(0)
{
    cout << "constructor without parameter" << endl;
    x = 22;
    y = 1;
    z = new int(5);
}
/////////////////////////////////////////////////////////////////////////////////

dot::dot(int x, int y = 8, int t = 0) : t(t)
{
    this->x = x;
    this->y = y;
    cout << "constructor with parameter" << x << " " << y << endl;
    z = new int(6);

}
/////////////////////////////////////////////////////////////////////////////////

int dot::getX()
{
    return x;
}
/////////////////////////////////////////////////////////////////////////////////

int dot::getY()
{
    return y;
}
/////////////////////////////////////////////////////////////////////////////////

void dot::setX(int _x)
{
    x = _x;
}
/////////////////////////////////////////////////////////////////////////////////

void dot::setY(int _y)
{
    y = _y;
}
/////////////////////////////////////////////////////////////////////////////////

dot::dot(const dot& n) : t(n.t) {

    x = n.x;
    y = n.y;
    z = new int(*n.z);
    cout << "Copy const : " << x << " " << y << endl;
    
}

/////////////////////////////////////////////////////////////////////////////////

dot::~dot()
{
    cout << "destructor started" << endl;
    delete z;
}
/////////////////////////////////////////////////////////////////////////////////

#endif